name: Deploy

on:
  push:
    branches:
      - main

jobs:
  backend-test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up GIS dependencies
      run: |
        sudo add-apt-repository ppa:ubuntugis/ppa
        sudo apt update
        sudo apt install libspatialindex-dev gdal-bin

    - name: Install dependencies
      run: |
        cd backend
        curl -sSL https://install.python-poetry.org | python3 -
        poetry --version
        poetry install
        
    - name: Run Tests
      run: |
        cd backend
        poetry run pytest .

  backend-deploy:
    needs: backend-test
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    
    - name: Generate python wheel and dependencies
      run: |
        cd backend
        curl -sSL https://install.python-poetry.org | python3 -
        poetry --version
        poetry build -f wheel
        poetry export -f requirements.txt -E docker --output requirements.txt
    
    - name: Set image names
      id: images
      run: |
        echo "Starting to tag images"
        PROJECT_ID=${{ secrets.GOOGLE_PROJECT_ID }}
        echo $PROJECT_ID
        SHORT_SHA=$(git rev-parse --short HEAD)
        echo $SHORT_SHA
        echo "::set-output name=DOCKERHUB_LATEST::btang164/running-routes:latest"
        echo "::set-output name=DOCKERHUB_SHA::btang164/running-routes:"$SHORT_SHA
        echo "::set-output name=GOOGLE_LATEST::australia-southeast2-docker.pkg.dev/running-routes-345611/btang164/running-routes:latest"

    - name: Build Docker image
      run: |
        cd backend
        docker build -t ${{ steps.images.outputs.DOCKERHUB_LATEST }} .

    - name: Push image to DockerHub
      run: |
        docker login -u btang164 -p ${{ secrets.DOCKER_ACCESS_TOKEN }} 
        docker tag ${{ steps.images.outputs.DOCKERHUB_LATEST }} ${{ steps.images.outputs.DOCKERHUB_SHA }}
        docker push ${{ steps.images.outputs.DOCKERHUB_SHA }} 
        docker push ${{ steps.images.outputs.DOCKERHUB_LATEST }} 
      
    - name: Sign into Google Cloud
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}'

    - name: Push image to Google Artifact Registry
      run: |
        gcloud auth configure-docker australia-southeast2-docker.pkg.dev
        docker tag ${{ steps.images.outputs.DOCKERHUB_LATEST }} ${{ steps.images.outputs.GOOGLE_LATEST }}
        docker push ${{ steps.images.outputs.GOOGLE_LATEST }}

  frontend-deploy:
    needs: backend-test
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Build frontend
      run: |
        cd frontend
        npm install
        npm run build
        cd dist
        echo 'www.running-routes.com' > CNAME

    - name: push to gh-pages
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "<>"
        git add -f frontend/dist && git commit -m "Building GitHub page"
        git push origin `git subtree split --prefix frontend/dist release`:gh-pages --force